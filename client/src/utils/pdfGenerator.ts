import jsPDF from 'jspdf';

interface PDFData {
  title: string;
  inputs: Record<string, any>;
  results: Record<string, any>;
  calculatorType: string;
}

export function generatePDF(data: PDFData): void {
  const doc = new jsPDF();
  
  // Header
  doc.setFontSize(20);
  doc.text('MoneyMap Financial Calculator', 20, 30);
  
  doc.setFontSize(16);
  doc.text(data.title, 20, 45);
  
  // Date
  doc.setFontSize(10);
  doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 55);
  
  // Input section
  doc.setFontSize(14);
  doc.text('Input Details:', 20, 75);
  
  let yPosition = 85;
  doc.setFontSize(10);
  
  Object.entries(data.inputs).forEach(([key, value]) => {
    const label = key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());
    doc.text(`${label}: ${value}`, 20, yPosition);
    yPosition += 8;
  });
  
  // Results section
  yPosition += 10;
  doc.setFontSize(14);
  doc.text('Calculation Results:', 20, yPosition);
  yPosition += 10;
  
  doc.setFontSize(10);
  Object.entries(data.results).forEach(([key, value]) => {
    const label = key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());
    doc.text(`${label}: ${value}`, 20, yPosition);
    yPosition += 8;
  });
  
  // Footer
  doc.setFontSize(8);
  doc.text('Generated by MoneyMap - Your Financial Planning Toolkit', 20, 280);
  
  // Save the PDF
  doc.save(`${data.calculatorType}-calculation-${Date.now()}.pdf`);
}

export function generateCSV(data: PDFData): void {
  const csvContent = [
    ['MoneyMap Financial Calculator Report'],
    ['Calculator Type', data.title],
    ['Generated On', new Date().toLocaleDateString()],
    [''],
    ['Input Details'],
    ...Object.entries(data.inputs).map(([key, value]) => [
      key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()),
      value
    ]),
    [''],
    ['Results'],
    ...Object.entries(data.results).map(([key, value]) => [
      key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()),
      value
    ])
  ].map(row => row.join(',')).join('\n');
  
  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
  const link = document.createElement('a');
  const url = URL.createObjectURL(blob);
  
  link.setAttribute('href', url);
  link.setAttribute('download', `${data.calculatorType}-calculation-${Date.now()}.csv`);
  link.style.visibility = 'hidden';
  
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}
